https://leetcode.com/problems/pascals-triangle/

int nCr(int n, int r) {
    long long res = 1;

    // calculating nCr:
    for (int i = 0; i < r; i++) {
        res = res * (n - i);
        res = res / (i + 1);
    }
    return res;
}
int pascalTriangle(int r, int c) {
    int element = nCr(r , c);
    return element;
}



class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> sol;
        for(int i = 0; i < numRows; i++) {
            vector<int> row;
// brute force calculate each element with ncr 

            // for(int j = 0; j <= i; j++) {
            //     row.push_back(pascalTriangle(i,j));
            // }
            // sol.push_back(row);

            

        }
        return sol;
    }
};



class Solution {
public:
    vector<vector<int>> generate(int numRows) {
vector<vector<int>> sol(numRows);
        
        for(int i = 0; i < numRows; i++) {
            sol[i].resize(i + 1);
            sol[i][0] = sol[i][i] = 1; // first and last element are always 1
            for(int j = 1; j < i; j++) {
                sol[i][j] = sol[i - 1][j - 1] + sol[i - 1][j]; // sum of the two elements above
            }
        }
        
        return sol;
    }
};
