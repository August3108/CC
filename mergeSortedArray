// problem : - https://leetcode.com/problems/merge-sorted-array/submissions/?envType=study-plan-v2&envId=top-interview-150
// merge sorted array 

// sol 1 using a third temp array 
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        vector<int> sol;
        int i = 0;
        int j = 0;

        while (i < m && j < n) {
            if (nums1[i] < nums2[j]) {
                sol.push_back(nums1[i]);
                i++;
            } else {
                sol.push_back(nums2[j]);
                j++;
            }
        }
        
        while (i < m) {
            sol.push_back(nums1[i]);
            i++;
        }
        
        while (j < n) {
            sol.push_back(nums2[j]);
            j++;
        }
        
        // Now, you might want to copy the merged result back into nums1.
        for (int k = 0; k < m + n; k++) {
            nums1[k] = sol[k];
        }
    }
};

// sol 2 
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m - 1;
        int j = n - 1;
        int k = m + n - 1;

        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }

        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }
};
