// rotate k element 
// https://leetcode.com/problems/rotate-array/submissions/?envType=study-plan-v2&envId=top-interview-150




// sol 1 
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        if (n <= 1) {
            return; 
        }

        k = k % n; 
        reverse(nums.begin(), nums.end());
        reverse(nums.begin(), nums.begin() + k);
        reverse(nums.begin() + k, nums.end());
    }
};

// sol 2 

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        int numberOfRotation = k % n; 

        vector<int> sol;
        if (n > 1) {

            for (int i = n - numberOfRotation; i < n; i++) {
                sol.push_back(nums[i]);
            }

            for (int i = 0; i < n - numberOfRotation; i++) {
                sol.push_back(nums[i]);
            }
            for (int i = 0; i < n; i++) {
                nums[i] = sol[i];
            }
        }
    }
};

